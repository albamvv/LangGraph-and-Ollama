from dotenv import load_dotenv
import os
import requests
from langchain_community.utilities import SQLDatabase
from langchain_community.tools.sql_database.tool import QuerySQLDataBaseTool
from langchain_ollama import ChatOllama
from typing import  TypedDict, Annotated
from langgraph.graph import  START, StateGraph
from IPython.display import display, Image
from langchain import hub
from langchain.schema import AIMessage


# Load environment variables from a .env file
load_dotenv('../.env')

##------------------------ LLM connection and MySQL Tools ---------------------------------
# Initialize SQL Database connection
db = SQLDatabase.from_uri("sqlite:///Chinook.db")

# Set up a connection to the LLM (Ollama model)
model = "qwen2.5"  # Alternative model: llama3.2:3b
llm = ChatOllama(model=model, base_url="http://localhost:11434")
response=llm.invoke("Hello").content
print("response-> ",response)

#--------------------- Aplication State or Graph State ----------------------

# Define the application state using a TypedDict structure
class State(TypedDict):
    question: str  # User's question
    query: str  # MySQL query generated by the LLM
    result: str  # MySQL query result
    answer: str  # Final LLM-generated answer

# Retrieve a query prompt template from Langchain hub
query_prompt_template = hub.pull("langchain-ai/sql-query-system-prompt")
print("query prompt template-> ",query_prompt_template)
query_prompt_template.messages[0].pretty_print()