from dotenv import load_dotenv
from langchain_community.utilities import SQLDatabase
from langchain_ollama import ChatOllama
from typing import  TypedDict, Annotated
from langchain import hub

##------------------------ LLM connection and MySQL Tools ---------------------------------

# Load environment variables from a .env file
load_dotenv('../.env')

# Initialize SQL Database connection
db = SQLDatabase.from_uri("sqlite:///Chinook.db")

# Inicializar el modelo LLM
model = "qwen2.5"
llm = ChatOllama(model=model, base_url="http://localhost:11434")

# Define the application state using a TypedDict structure
class State(TypedDict):
    question: str  # User's question
    query: str  # MySQL query generated by the LLM
    result: str  # MySQL query result
    answer: str  # Final LLM-generated answer

# Retrieve a query prompt template from Langchain hub
query_prompt_template = hub.pull("langchain-ai/sql-query-system-prompt")
#print("query prompt template-> ",query_prompt_template)
#query_prompt_template.messages[0].pretty_print()
prompt = hub.pull("langchain-ai/sql-agent-system-prompt")


# Define the structured response format for the MySQL query
# The query key must be a string (str), and it uses Annotated to provide additional metadata.
# The annotation ..., "Syntactically correct and valid SQL query" is a description, but it doesn't affect execution.
class QueryOutput(TypedDict):
    """Generated SQL query"""
    query: Annotated[str, ..., "Syntactically correct and valid SQL query"]
